version: '3.8'

services:

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile.frontend 
  #   ports:
  #     - "3000:3000"
  #   command: serve -s /app/build -l 3000
  #   depends_on:
  #     - backend

  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    environment:
      - CERTBOT_EMAIL
    env_file:
      - ./nginx-certbot.env
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./user_conf.d:/etc/nginx/user_conf.d
    

     
    
  postgres:
    restart: unless-stopped
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: soulful
      POSTGRES_USER: soulful
      POSTGRES_PASSWORD: soulful@123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"


  backend:
    restart: unless-stopped
    container_name: backend
    build:
      context: ./backend/
      dockerfile: Dockerfile.backend
    entrypoint: /app/server-entrypoint.sh
    volumes:
      - static_volume:/vol/static
      - media_volume:/vol/media
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - postgres
   

 
  worker:
    restart: unless-stopped
    build:
      context: ./backend/
      dockerfile: Dockerfile.backend
    container_name: worker
    entrypoint: /app/worker-entrypoint.sh
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
    depends_on:
      - backend
      - redis


  beat:
    restart: unless-stopped
    build:
      context: ./backend/
      dockerfile: Dockerfile.backend
    entrypoint: /app/beat-entrypoint.sh
    container_name: beat
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
    depends_on:
      - backend
      - redis


  redis:
    restart: unless-stopped
    container_name: redis
    image: redis:7.0.5-alpine
    expose:
      - 6379




   
volumes:
  static_volume:
  media_volume:
  postgres_data: 
  nginx_secrets: